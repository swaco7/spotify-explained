<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:tools="http://schemas.android.com/tools"
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">
    <data>
        <import type="com.example.spotifyexplained.model.enums.VisualState"/>
        <import type="com.example.spotifyexplained.model.enums.LoadingState"/>
        <import type="com.example.spotifyexplained.model.enums.ZoomType"/>
        <import type="com.example.spotifyexplained.model.enums.DetailVisibleType"/>
        <import type="android.view.View" />
        <variable
            name="viewModel"
            type="com.example.spotifyexplained.ui.recommend.custom.specific.CustomRecommendSpecificViewModel" />
        <variable
            name="trackClickHandler"
            type="com.example.spotifyexplained.general.TrackDetailClickHandler"/>
        <variable
            name="graphClickHandler"
            type="com.example.spotifyexplained.general.GraphClickHandler"/>
        <variable
            name="expanded"
            type="Boolean"/>
        <variable
            name="zoomType"
            type="com.example.spotifyexplained.model.enums.ZoomType" />
    </data>
    <RelativeLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".ui.recommend.custom.specific.CustomRecommendSpecificFragment">

        <include layout="@layout/reusable_button_layout"
            app:tabClickHandler="@{viewModel}"
            app:visualState="@{viewModel.visualState}">
        </include>

        <include layout="@layout/reusable_item_info_layout"
            app:detailVisibleType="@{viewModel.detailVisibleType}"
            app:detailViewVisible="@{viewModel.detailViewVisible}"
            app:isTrack="@{viewModel.isTrack}"
            app:imageUrl="@{viewModel.imageUrl}"
            app:artistName="@{viewModel.artistName}"
            app:selectedTrack="@{viewModel.selectedTrack}"
            app:trackClickHandler="@{trackClickHandler}" />

        <include layout="@layout/reusable_bundle_info_layout"
            app:detailVisibleType="@{viewModel.detailVisibleType}"
            app:detailViewVisible="@{viewModel.detailViewVisible}"
            app:graphClickHandler="@{graphClickHandler}" />

        <View
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_below="@id/button_layout"
            android:background="@color/white"
            android:visibility='@{viewModel.visualState == VisualState.GRAPH &amp;&amp; viewModel.loadingState != LoadingState.GRAPH_LOADED ? View.VISIBLE : View.GONE}'>
        </View>

        <ProgressBar
            android:id="@+id/progressBarGraph"
            style="?android:attr/progressBarStyle"
            android:layout_width="match_parent"
            android:layout_centerVertical="true"
            android:layout_height="wrap_content"
            android:visibility="@{viewModel.visualState == VisualState.GRAPH &amp;&amp; viewModel.graphLoadingState == LoadingState.LOADING ? View.VISIBLE : View.GONE}"/>

        <androidx.recyclerview.widget.RecyclerView
            android:id="@+id/recommend_list"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_below="@+id/button_layout"
            android:layout_marginBottom="60dp"
            android:visibility="@{viewModel.visualState == VisualState.TABLE ? View.VISIBLE : View.GONE}"
            app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager" />

        <WebView
            android:id="@+id/web_view"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:layout_below="@id/button_layout"
            android:visibility='@{viewModel.visualState == VisualState.GRAPH &amp;&amp; viewModel.graphLoadingState == LoadingState.GRAPH_LOADED ? View.VISIBLE : View.GONE}' />

        <RelativeLayout
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:focusable="true"
            android:clickable="true"
            android:layout_margin="8dp"
            android:layout_below="@id/button_layout"
            app:rippleColor="@color/purple_700"
            android:background="?attr/selectableItemBackground"
            android:onClick="@{() -> zoomType == ZoomType.BASIC ? graphClickHandler.onResponsiveZoomClick() : graphClickHandler.onBasicZoomClick()}"
            android:visibility="@{viewModel.visualState == VisualState.GRAPH ? View.VISIBLE : View.GONE}">

            <ImageView
                android:id="@+id/icon"
                android:layout_width="28dp"
                android:layout_height="28dp"
                android:background="?attr/selectableItemBackground"
                android:src="@{zoomType == ZoomType.BASIC ? @drawable/zoom_responsive_48px : @drawable/zoom_normal_48px}">
            </ImageView>
        </RelativeLayout>
        <include layout="@layout/reusable_nodata_info"
            android:layout_below="@+id/graph_controls_layout"
            android:layout_height="wrap_content"
            android:layout_width="match_parent"
            android:visibility="@{viewModel.graphLoadingState == LoadingState.FAILURE ? View.VISIBLE : View.GONE}">
        </include>
    </RelativeLayout>
</layout>